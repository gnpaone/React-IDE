{"version":3,"sources":["config/index.js","utils/resetApp.js","utils/device.js","utils/isMobile.js","utils/isDesktop.js","components/Loading/useStyles.js","components/Loading/index.js","utils/asyncComponentLoader.js","utils/rTabs.js","utils/index.js","store/actions/index.js","store/state/index.js","store/index.js","components/ErrorBoundaryFallback/useStyles.js","components/ErrorBoundaryFallback/index.js","components/ErrorBoundaryFallback/ErrorBoundaryFallback.js","sections/Header/index.js","layout/Header/useStyles.js","layout/Header/index.js","sections/Content/index.js","layout/Content/index.js","theme/getTheme.js","theme/ThemeProvider.js","layout/index.js","App.js","serviceWorker.js","index.js"],"names":["config","links","github","notifications","props","anchorOrigin","vertical","horizontal","autoHideDuration","defaultState","isActive","message","variant","opt","messages","errorBoundary","somethingWentWrong","resetApp","openIssue","urls","octocatIcon","logoIcon","themeModeIcon","supportedLanguages","id","name","_","window","location","href","Device","navigator","userAgent","device","mobile","tablet","phone","useStyles","makeStyles","theme","preloader","position","width","height","left","top","display","justifyContent","alignItems","Loading","classes","Paper","elevation","square","className","CircularProgress","size","wrapperStyles","flexGrow","minHeight","flexShrink","WaitingCompLoader","style","isLoading","asyncComponentLoader","Component","fallback","rTabs","str","trim","replace","type","initalTheme","localStorage","getItem","initialState","themeMode","isEditorReady","editor","selectedLanguageId","options","acceptSuggestionOnCommitCharacter","acceptSuggestionOnEnter","accessibilitySupport","autoIndent","automaticLayout","codeLens","colorDecorators","contextmenu","cursorBlinking","cursorSmoothCaretAnimation","cursorStyle","disableLayerHinting","disableMonospaceOptimizations","dragAndDrop","fixedOverflowWidgets","folding","foldingStrategy","fontLigatures","formatOnPaste","formatOnType","hideCursorInOverviewRuler","highlightActiveIndentGuide","mouseWheelZoom","multiCursorMergeOverlapping","multiCursorModifier","overviewRulerBorder","overviewRulerLanes","quickSuggestions","quickSuggestionsDelay","readOnly","renderControlCharacters","renderFinalNewline","renderIndentGuides","renderLineHighlight","renderWhitespace","revealHorizontalRightPadding","roundedSelection","rulers","scrollBeyondLastColumn","scrollBeyondLastLine","selectOnLineNumbers","selectionClipboard","selectionHighlight","showFoldingControls","smoothScrolling","suggestOnTriggerCharacters","wordBasedSuggestions","wordSeparators","wordWrap","wordWrapBreakAfterCharacters","wordWrapBreakBeforeCharacters","wordWrapBreakObtrusiveCharacters","wordWrapColumn","wordWrapMinified","wrappingIndent","monacoTheme","setIsEditorReady","isReady","state","setThemeMode","setItem","showNotification","hideNotification","setSelectedLanguageId","setOptions","setMonacoTheme","store","createOvermind","actions","useStore","createHook","wrapper","paper","padding","paddingLeft","buttons","marginTop","ErrorBoundaryFallback","Typography","component","Button","target","rel","src","alt","onClick","lazy","root","marginBottom","mixins","toolbar","HeaderSection","HeaderLoader","Header","ContentSection","ContentLoader","Content","getTheme","palette","background","createMuiTheme","CustomThemeProvider","children","ThemeProvider","Layout","App","FallbackComponent","Boolean","hostname","match","ReactDOM","render","value","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"6GA8CeA,IA9CA,CACbC,MAAO,CACLC,OAAQ,wCAGVC,cAAe,CACbC,MAAO,CACLC,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,iBAAkB,MAEpBC,aAAc,CACZC,UAAU,EACVC,QAAS,GACTC,QAAS,OACTC,IAAK,KAITC,SAAU,CACRC,cAAe,CACbC,mBACE,2DACFC,SAAU,sCACVC,UAAW,gDAIfC,KAAM,CACJC,YAAa,+BACbC,SAAU,8BACVC,cAAe,mCAGjBC,mBAAoB,CAClB,CAAEC,GAAI,EAAGC,KAAM,KACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,MACf,CAAED,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,cACf,CAAED,GAAI,EAAGC,KAAM,OACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,Q,gCC1CnB,IAEeR,EAFE,SAAAS,GAAC,OAAKC,OAAOC,SAASC,KAAO,K,QCE/B,M,OAAIC,GAAOH,OAAOI,UAAUC,WCA5BC,GCAEA,EAAOC,UAAYD,EAAOE,UAAYF,EAAOG,QDA/CH,EAAOC,U,2CEaPG,EAbGC,aAAW,SAAAC,GAAK,MAAK,CACrCC,UAAW,CACTC,SAAU,WACVC,MAAO,OACPC,OAAQ,OACRC,KAAM,EACNC,IAAK,EACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,cCQDC,EAZC,SAAAvB,GACd,IAAMwB,EAAUb,IAEhB,OAAO,kBAACc,EAAA,EAAK,CAACC,UAAW,EAAGC,QAAQ,EAAMC,UAAWJ,EAAQV,WAC3D,kBAACe,EAAA,EAAgB,CAACC,KAAM,OCPtBC,EAAgB,CACpBd,OAAQ,OACRG,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChBW,SAAU,EACVC,UAAW,GACXC,WAAY,GAGRC,EAAoB,SAAAnC,GAAC,OAAI,yBAAKoC,MAAOL,GACzC,kBAAC,EAAO,CAACM,WAAS,MAOLC,EAJc,SAAAC,GAAS,OAAI,SAAA7D,GAAK,OAAI,kBAAC,WAAQ,CAAC8D,SAAU,kBAAC,EAAiB,OACvF,kBAACD,EAAc7D,MCjBF+D,EAFD,SAAAC,GAAG,OAAIA,EAAIC,OAAOC,QAAQ,UAAW,KCAnD,yI,2RC0BGC,E,wBCxBGC,EAAcC,aAAaC,QAAQ,cAAgB,OAEnDC,EAAe,CACnBC,UAAWJ,EAEXK,eAAe,EAEf1E,cAAeH,IAAOG,cAAcM,aAEpCqE,OAAQ,CACNC,mBAAoB,EACpBC,QAAS,CACPC,mCAAmC,EACnCC,wBAAyB,KACzBC,qBAAsB,OACtBC,YAAY,EACZC,iBAAiB,EACjBC,UAAU,EACVC,iBAAiB,EACjBC,aAAa,EACbC,eAAgB,QAChBC,4BAA4B,EAC5BC,YAAa,OACbC,qBAAqB,EACrBC,+BAA+B,EAC/BC,aAAa,EACbC,sBAAsB,EACtBC,SAAS,EACTC,gBAAiB,OACjBC,eAAe,EACfC,eAAe,EACfC,cAAc,EACdC,2BAA2B,EAC3BC,4BAA4B,EAC5BrG,OAAO,EACPsG,gBAAgB,EAChBC,6BAA6B,EAC7BC,oBAAqB,MACrBC,qBAAqB,EACrBC,mBAAoB,EACpBC,kBAAkB,EAClBC,sBAAuB,IACvBC,UAAU,EACVC,yBAAyB,EACzBC,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAqB,MACrBC,iBAAkB,OAClBC,6BAA8B,GAC9BC,kBAAkB,EAClBC,OAAQ,GACRC,uBAAwB,EACxBC,sBAAsB,EACtBC,qBAAqB,EACrBC,oBAAoB,EACpBC,oBAAoB,EACpBC,oBAAqB,YACrBC,iBAAiB,EACjBC,4BAA4B,EAC5BC,sBAAsB,EAEtBC,eAAe,iCACfC,SAAU,MACVC,6BAA8B,aAC9BC,8BAA+B,OAC/BC,iCAAkC,IAClCC,eAAgB,GAChBC,kBAAkB,EAClBC,eAAgB,SAIpBC,YAA6B,SAAhBhE,EAAyB,UAAYA,GD1E9CiE,EAAmB,SAAH,EAAeC,GAAJ,EAALC,MACpB9D,cAAgB6D,GAGlBE,EAAe,SAAH,EAAehE,GAAJ,EAAL+D,MAChB/D,UAAYA,EAClBH,aAAaoE,QAAQ,YAAajE,IAG9BkE,EAAmB,SAAH,KAGhB,IAFFH,EAAK,EAALA,MACAhI,EAAO,EAAPA,QAAQ,EAAD,EAAEC,eAAO,MAAG,OAAM,MAAEC,WAAG,MAAG,GAAE,EAErC8H,EAAMxI,cAAgB,CACpBO,UAAU,EACVC,UACAC,UACAC,QAIEkI,EAAmB,SAAH,GAAW,EAALJ,MACpBxI,cAAcO,UAAW,GAS3BoE,EAAS,CACbkE,uBANCzE,EAM4C,SAL7C,WAAY/C,GAAJ,EAALmH,MACKpE,GAAMQ,mBAAqBvD,IAKnCyH,WAAU,WAAYjE,GAAJ,EAAL2D,MACL7D,OAAOE,QAAUA,GAEzBkE,eAAc,WAAY3G,GAAJ,EAALoG,MACTH,YAAcjG,IErCxB,oEAMO,IAAM4G,EAAQC,YAAe,CAClCT,MAAOhE,EACP0E,YAGWC,EAAWC,e,2NCcTlH,EAvBGC,aAAW,SAAAC,GAAK,MAAK,CACrCiH,QAAS,CACP7G,OAAQ,OACRG,QAAS,OACTC,eAAgB,SAChBC,WAAY,UAEdyG,MAAO,CACLC,QAAS,GAET,QAAS,CACPhH,MAAO,OACPC,OAAQ,IAEV,OAAQ,CACNgH,YAAa,KAGjBC,QAAS,CACPC,UAAW,QCnBAC,ECUe,SAAApI,GAC5B,IAAMwB,EAAUb,IAEhB,OACE,yBAAKiB,UAAWJ,EAAQsG,SACtB,kBAACrG,EAAA,EAAK,CAACG,UAAWJ,EAAQuG,OACxB,kBAACM,EAAA,EAAU,CAACnJ,QAAQ,KAAKoJ,UAAU,MAChChK,IAAOc,SAASC,cAAcC,oBAEjC,yBAAKsC,UAAWJ,EAAQ0G,SACtB,6BACE,kBAACK,EAAA,EAAM,CAACC,OAAO,SAASC,IAAI,aAAatI,KAAM7B,IAAOC,MAAMC,QACzDF,IAAOc,SAASC,cAAcG,UAC/B,yBAAKkJ,IAAKpK,IAAOmB,KAAKC,YAAaiJ,IAAI,kBAG3C,kBAACN,EAAA,EAAU,CAACC,UAAU,MAAI,MAC1B,6BACE,kBAACC,EAAA,EAAM,CAACK,QAASrJ,KAAWjB,IAAOc,SAASC,cAAcE,SAAQ,IAAE,kBAAC,IAAS,YC5B3EsJ,kBAAK,SAAA7I,GAAC,OAAI,uDCOVW,EAPGC,aAAW,SAAAC,GAAK,MAAK,CACrCiI,KAAM,CACJ9G,SAAU,EACV+G,aAAclI,EAAMmI,OAAOC,QAAQhH,UAAY,OCE7CiH,EAAgB5G,YAAqB6G,GAY5BC,EAVA,SAAApJ,GACb,IAAMwB,EAAUb,IAEhB,OACE,yBAAKiB,UAAWJ,EAAQsH,MACtB,kBAACI,EAAa,QCZLL,kBAAK,SAAA7I,GAAC,OAAI,uDCGnBqJ,EAAiB/G,YAAqBgH,GAM7BC,EAJC,SAAAvJ,GAAC,OAAI,6BACnB,kBAACqJ,EAAc,Q,QCUFG,EAfE,SAAAtG,GAEf,IAAMuG,EAAU,CACd5G,KAAMK,GASR,MANkB,SAAdA,IACFuG,EAAQC,WAAa,CACnB3B,MAAO,YAIJ4B,YAAe,CAAEF,a,iBCAXG,EARa,SAAH,GAAsB,IAAhBC,EAAQ,EAARA,SACZ3G,EAAgB0E,cAAzBX,MAAS/D,UAEjB,OAAO,kBAAC4G,EAAA,EAAa,CAACjJ,MAAO2I,EAAStG,IACnC2G,ICGUE,EAPA,SAAA/J,GAAC,OAAI,kBAAC,EAAa,KAChC,6BAAS4B,UAAU,aACjB,kBAAC,EAAM,MACP,kBAAC,EAAO,SCGGoI,EANH,SAAAhK,GAAC,OACX,kBAAC,IAAa,CAACiK,kBAAmB7B,GAChC,kBAAC,EAAM,Q,QCGS8B,QACW,cAA7BjK,OAAOC,SAASiK,UAEe,UAA7BlK,OAAOC,SAASiK,UAEhBlK,OAAOC,SAASiK,SAASC,MACvB,2D,MCPNC,IAASC,OAAO,kBAAC,IAAQ,CAACC,MAAO9C,KAAO,kBAAC,EAAG,OAAgB+C,SAASC,eAAe,SDsH9E,kBAAmBpK,WACrBA,UAAUqK,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f32d2407.chunk.js","sourcesContent":["const config = {\n  links: {\n    github: \"https://github.com/gnpaone/React-IDE\",\n  },\n\n  notifications: {\n    props: {\n      anchorOrigin: { vertical: \"top\", horizontal: \"right\" },\n      autoHideDuration: 2500,\n    },\n    defaultState: {\n      isActive: false,\n      message: \"\",\n      variant: \"info\",\n      opt: {},\n    },\n  },\n\n  messages: {\n    errorBoundary: {\n      somethingWentWrong:\n        \"Oooops... Sorry, I guess, something went wrong. You can:\",\n      resetApp: \"Press here to reset the application\",\n      openIssue: \"Press here to open issue about it on GitHub\",\n    },\n  },\n\n  urls: {\n    octocatIcon: \"/React-IDE/icons/octocat.png\",\n    logoIcon: \"/React-IDE/icons/mylogo.png\",\n    themeModeIcon: \"/React-IDE/icons/theme-mode.png\",\n  },\n\n  supportedLanguages: [\n    { id: 1, name: \"c\" },\n    { id: 2, name: \"cpp\" },\n    { id: 3, name: \"csharp\" },\n    { id: 4, name: \"go\" },\n    { id: 5, name: \"java\" },\n    { id: 6, name: \"javascript\" },\n    { id: 7, name: \"php\" },\n    { id: 8, name: \"python\" },\n    { id: 9, name: \"r\" },\n  ],\n};\n\nexport default config;\n","const resetApp = _ => (window.location.href = '/');\n\nexport default resetApp;\n","import Device from 'mobile-detect';\n\nexport default new Device(window.navigator.userAgent);\n","import device from './device';\n\nexport default device.mobile();\n","import device from './device';\n\nexport default !(device.mobile() || device.tablet() || device.phone());\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  preloader: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    left: 0,\n    top: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Paper from '@material-ui/core/Paper';\n\nimport useStyles from './useStyles';\n\nconst Loading = _ => {\n  const classes = useStyles();\n\n  return <Paper elevation={0} square={true} className={classes.preloader}>\n    <CircularProgress size={50} />\n  </Paper>;\n};\n\nLoading.propTypes = {\n  // interesting times; there are components not using any prop...\n};\n\nexport default Loading;\n","import React, { Suspense } from 'react';\n\nimport Loading from 'components/Loading';\n\nconst wrapperStyles = {\n  height: '100%',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexGrow: 1,\n  minHeight: 50,\n  flexShrink: 0,\n};\n\nconst WaitingCompLoader = _ => <div style={wrapperStyles}>\n  <Loading isLoading/>\n</div>;\n\nconst asyncComponentLoader = Component => props => <Suspense fallback={<WaitingCompLoader />}>\n  <Component {...props} />\n</Suspense>;\n\nexport default asyncComponentLoader;\n","const rTabs = str => str.trim().replace(/^ {4}/gm, '');\n\nexport default rTabs;\n","import resetApp from './resetApp';\nimport device from './device';\nimport isDesktop from './isDesktop';\nimport isMobile from './isMobile';\nimport asyncComponentLoader from './asyncComponentLoader';\nimport rTabs from './rTabs';\nimport noop from './noop';\n\nexport {\n  resetApp,\n  device,\n  isDesktop,\n  isMobile,\n  asyncComponentLoader,\n  rTabs,\n  noop,\n};\n","const setIsEditorReady = ({ state }, isReady) => {\n  state.isEditorReady = isReady;\n};\n\nconst setThemeMode = ({ state }, themeMode) => {\n  state.themeMode = themeMode;\n  localStorage.setItem(\"themeMode\", themeMode);\n};\n\nconst showNotification = (\n  { state },\n  { message, variant = \"info\", opt = {} }\n) => {\n  state.notifications = {\n    isActive: true,\n    message,\n    variant,\n    opt,\n  };\n};\n\nconst hideNotification = ({ state }) => {\n  state.notifications.isActive = false;\n};\n\nconst setSelectedLanguageId =\n  (type) =>\n  ({ state }, id) => {\n    state[type].selectedLanguageId = id;\n  };\n\nconst editor = {\n  setSelectedLanguageId: setSelectedLanguageId(\"editor\"),\n  setOptions({ state }, options) {\n    state.editor.options = options;\n  },\n  setMonacoTheme({ state }, theme) {\n    state.monacoTheme = theme;\n  },\n};\n\nexport {\n  hideNotification,\n  setThemeMode,\n  setIsEditorReady,\n  showNotification,\n  editor,\n};\n","import config from \"config\";\n\nconst initalTheme = localStorage.getItem(\"themeMode\") || \"dark\";\n\nconst initialState = {\n  themeMode: initalTheme,\n\n  isEditorReady: false,\n\n  notifications: config.notifications.defaultState,\n\n  editor: {\n    selectedLanguageId: 6,\n    options: {\n      acceptSuggestionOnCommitCharacter: true,\n      acceptSuggestionOnEnter: \"on\",\n      accessibilitySupport: \"auto\",\n      autoIndent: false,\n      automaticLayout: true,\n      codeLens: true,\n      colorDecorators: true,\n      contextmenu: true,\n      cursorBlinking: \"blink\",\n      cursorSmoothCaretAnimation: false,\n      cursorStyle: \"line\",\n      disableLayerHinting: false,\n      disableMonospaceOptimizations: false,\n      dragAndDrop: false,\n      fixedOverflowWidgets: false,\n      folding: true,\n      foldingStrategy: \"auto\",\n      fontLigatures: false,\n      formatOnPaste: false,\n      formatOnType: false,\n      hideCursorInOverviewRuler: false,\n      highlightActiveIndentGuide: true,\n      links: true,\n      mouseWheelZoom: false,\n      multiCursorMergeOverlapping: true,\n      multiCursorModifier: \"alt\",\n      overviewRulerBorder: true,\n      overviewRulerLanes: 2,\n      quickSuggestions: true,\n      quickSuggestionsDelay: 100,\n      readOnly: false,\n      renderControlCharacters: false,\n      renderFinalNewline: true,\n      renderIndentGuides: true,\n      renderLineHighlight: \"all\",\n      renderWhitespace: \"none\",\n      revealHorizontalRightPadding: 30,\n      roundedSelection: true,\n      rulers: [],\n      scrollBeyondLastColumn: 5,\n      scrollBeyondLastLine: true,\n      selectOnLineNumbers: true,\n      selectionClipboard: true,\n      selectionHighlight: true,\n      showFoldingControls: \"mouseover\",\n      smoothScrolling: false,\n      suggestOnTriggerCharacters: true,\n      wordBasedSuggestions: true,\n      // eslint-disable-next-line\n      wordSeparators: `~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?`,\n      wordWrap: \"off\",\n      wordWrapBreakAfterCharacters: \"\\t})]?|&,;\",\n      wordWrapBreakBeforeCharacters: \"{([+\",\n      wordWrapBreakObtrusiveCharacters: \".\",\n      wordWrapColumn: 80,\n      wordWrapMinified: true,\n      wrappingIndent: \"none\",\n    },\n  },\n\n  monacoTheme: initalTheme === \"dark\" ? \"vs-dark\" : initalTheme,\n};\n\nexport { initialState };\n","import { createOvermind } from \"overmind\";\nimport { createHook } from \"overmind-react\";\n\nimport { initialState } from \"./state\";\nimport * as actions from \"./actions\";\n\nexport const store = createOvermind({\n  state: initialState,\n  actions,\n});\n\nexport const useStore = createHook();\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  wrapper: {\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  paper: {\n    padding: 40,\n \n    '& img': {\n      width: 'auto',\n      height: 25,\n    },\n    '& h6': {\n      paddingLeft: 15,\n    },\n  },\n  buttons: {\n    marginTop: 30,\n  },\n}));\n\nexport default useStyles;\n","import ErrorBoundaryFallback from './ErrorBoundaryFallback';\n\nexport default ErrorBoundaryFallback;\n","import React from 'react';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport ResetIcon from '@material-ui/icons/Refresh';\n\nimport { resetApp } from 'utils';\nimport config from 'config';\n\nimport useStyles from './useStyles';\n\nconst ErrorBoundaryFallback = _ => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.wrapper}>\n      <Paper className={classes.paper}>\n        <Typography variant=\"h5\" component=\"h3\">\n          {config.messages.errorBoundary.somethingWentWrong}\n        </Typography>\n        <div className={classes.buttons}>\n          <div>\n            <Button target=\"_blank\" rel=\"noreferrer\" href={config.links.github}>\n              {config.messages.errorBoundary.openIssue}\n              <img src={config.urls.octocatIcon} alt=\"github icon\"/>\n            </Button>\n          </div>\n          <Typography component=\"h6\">or</Typography>\n          <div>\n            <Button onClick={resetApp}>{config.messages.errorBoundary.resetApp} <ResetIcon /></Button>\n          </div>\n        </div>\n      </Paper>\n    </div>\n  );\n};\n\nexport default ErrorBoundaryFallback;\n","import { lazy } from 'react';\n\nexport default lazy(_ => import('./Header'));\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginBottom: theme.mixins.toolbar.minHeight + 4,\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\n\nimport HeaderLoader from 'sections/Header';\nimport { asyncComponentLoader } from 'utils';\n\nimport useStyles from './useStyles';\n\nconst HeaderSection = asyncComponentLoader(HeaderLoader);\n\nconst Header = _ => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <HeaderSection />\n    </div>\n  );\n};\n\nexport default Header;\n","import { lazy } from 'react';\n\nexport default lazy(_ => import('./Content'));\n","import React from 'react';\n\nimport ContentLoader from 'sections/Content';\nimport { asyncComponentLoader } from 'utils';\n\nconst ContentSection = asyncComponentLoader(ContentLoader);\n\nconst Content = _ => <div>\n  <ContentSection />\n</div>;\n\nexport default Content;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst getTheme = themeMode => {\n\n  const palette = {\n    type: themeMode,\n  };\n\n  if (themeMode === 'dark') {\n    palette.background = {\n      paper: '#202124',\n    };\n  }\n\n  return createMuiTheme({ palette });\n};\n\nexport default getTheme;\n","import React from 'react';\n\nimport { ThemeProvider } from '@material-ui/styles';\nimport getTheme from './getTheme';\n\nimport { useStore } from 'store';\n\nconst CustomThemeProvider = ({ children }) => {\n  const { state: { themeMode } } = useStore();\n\n  return <ThemeProvider theme={getTheme(themeMode)}>\n    {children}\n  </ThemeProvider>;\n};\n\nexport default CustomThemeProvider;\n","import React from 'react';\n\nimport Header from './Header';\nimport Content from './Content';\n\nimport { ThemeProvider } from 'theme';\n\nconst Layout = _ => <ThemeProvider>\n  <section className=\"full-size\">\n    <Header />\n    <Content />\n  </section>\n</ThemeProvider>;\n\nexport default Layout;\n","import React from 'react';\n\nimport ErrorBoundary from 'react-error-boundary';\nimport ErrorBoundaryFallback from 'components/ErrorBoundaryFallback';\n\nimport Layout from 'layout';\n\nconst App = _ => (\n  <ErrorBoundary FallbackComponent={ErrorBoundaryFallback}>\n    <Layout />\n  </ErrorBoundary>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { Provider } from 'overmind-react'\nimport { store } from 'store';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\n\nReactDOM.render(<Provider value={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}