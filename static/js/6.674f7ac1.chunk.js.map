{"version":3,"sources":["notifications/SnackbarContent/useStyles.js","notifications/SnackbarContent/SnackbarContent.js","notifications/SnackbarContent/index.js","notifications/index.js","sections/Header/useStyles.js","sections/Header/Header.js"],"names":["useStyles","makeStyles","theme","success","backgroundColor","green","error","palette","dark","info","primary","warning","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","SnackbarContent","props","classes","className","onClose","variant","other","Icon","classNames","aria-describedby","id","action","IconButton","key","aria-label","color","onClick","Notifications","_","useStore","notifications","state","hideNotification","actions","Snackbar","open","isActive","config","opt","title","flexGrow","logo","padding","themeSwitcher","transition","transform","stars","position","content","fontWeight","zIndex","activate","left","top","rotate","Header","themeMode","selectedLanguageId","monacoTheme","editor","setThemeMode","setSelectedLanguageId","setMonacoTheme","AppBar","Toolbar","Typography","width","src","urls","logoIcon","alt","isMobile","TextField","select","value","onChange","ev","target","label","supportedLanguages","map","language","MenuItem","name","Button","themeModeIcon","rel","href","links","github","octocatIcon"],"mappings":"2YA8BeA,EA1BGC,aAAW,SAAAC,GAAK,MAAK,CACrCC,QAAS,CACPC,gBAAiBC,IAAM,MAEzBC,MAAO,CACLF,gBAAiBF,EAAMK,QAAQD,MAAME,MAEvCC,KAAM,CACJL,gBAAiBF,EAAMK,QAAQG,QAAQF,MAEzCG,QAAS,CACPP,gBAAiBQ,IAAM,MAEzBC,KAAM,CACJC,SAAU,IAEZC,YAAa,CACXC,QAAS,GACTC,YAAaf,EAAMgB,QAAQ,IAE7BC,QAAS,CACPC,QAAS,OACTC,WAAY,c,8CCZVC,EAAc,CAClBnB,QAASoB,IACTZ,QAASa,IACTlB,MAAOmB,IACPhB,KAAMiB,KChBOC,EDmBgB,SAAAC,GAC7B,IAAMC,EAAU7B,IACR8B,EAAmDF,EAAnDE,UAAWX,EAAwCS,EAAxCT,QAASY,EAA+BH,EAA/BG,QAASC,EAAsBJ,EAAtBI,QAAYC,EAAK,YAAKL,EAAK,GAC1DM,EAAOZ,EAAYU,GAEzB,OACE,kBAACL,EAAA,EAAe,eACdG,UAAWK,IAAWN,EAAQG,GAAUF,GACxCM,mBAAiB,wBACjBjB,QACE,0BAAMkB,GAAG,wBAAwBP,UAAWD,EAAQV,SAClD,kBAACe,EAAI,CAACJ,UAAWK,IAAWN,EAAQhB,KAAMgB,EAAQd,eACjDI,GAGLmB,OAAQ,CACN,kBAACC,EAAA,EAAU,CAACC,IAAI,QAAQC,aAAW,QAAQC,MAAM,UAAUC,QAASZ,GAClE,kBAAC,IAAS,CAACD,UAAWD,EAAQhB,UAG9BoB,K,QEhBKW,EAjBO,SAAAC,GACpB,MAAoEC,cAAnDC,EAAa,EAAtBC,MAASD,cAA4BE,EAAgB,EAA3BC,QAAWD,iBAE7C,OAAO,kBAACE,EAAA,EAAQ,eACdC,KAAML,EAAcM,SACpBtB,QAASkB,GACLK,IAAOP,cAAcnB,MACrBmB,EAAcQ,KAElB,kBAAC,EAAe,CACdpC,QAAS4B,EAAc5B,QACvBY,QAASkB,EACTjB,QAASe,EAAcf,Y,QCiCdhC,EAnDGC,aAAW,SAACC,GAAK,MAAM,CACvCsD,MAAO,CACLC,SAAU,GAEZC,KAAM,CACJC,QAAS,GAEXC,cAAe,CACbC,WAAY,YACZC,UAAW,kBAEbC,MAAO,CACLC,SAAU,WACV,oBAAqB,CACnBtB,MAAO,QACPuB,QAAS,MACTnD,SAAU,EACVoD,WAAY,IACZF,SAAU,WACVG,OAAQ,EACRN,WAAY,YACZ7C,QAAS,IAGboD,SAAU,CACR,uBAAwB,CACtBC,KAAM,EACNC,KAAM,EACNtD,QAAS,GAEX,wBAAyB,CACvBqD,KAAM,EACNC,KAAM,GACNxD,SAAU,GACVE,QAAS,GAEX,uBAAwB,CACtBqD,KAAM,GACNC,KAAM,GACNxD,SAAU,GACVE,QAAS,GAEX,wBAAyB,CACvBI,QAAS,SAGbmD,OAAQ,CACNT,UAAW,iBCiDAU,UAhFA,SAAC3B,GACd,IAAMhB,EAAU7B,IAChB,EAUI8C,cAAU,IATZE,MACEyB,EAAS,EAATA,UAEUC,GADC,EAAXC,YAC4B,EAA5BC,OAAUF,oBAAkB,IAE9BxB,QACE2B,EAAY,EAAZA,aAAa,EAAD,EACZD,OAAUE,EAAqB,EAArBA,sBAAuBC,EAAc,EAAdA,eAarC,OACE,oCACE,kBAACC,EAAA,EAAM,CAACtC,MAAM,WACZ,kBAACuC,EAAA,EAAO,KACN,kBAACC,EAAA,EAAU,CAACpD,UAAWD,EAAQ6B,MAC7B,yBAAKyB,MAAM,KAAKC,IAAK9B,IAAO+B,KAAKC,SAAUC,IAAI,WAE/CC,KACA,kBAACN,EAAA,EAAU,CAAClD,QAAQ,KAAKF,UAAWD,EAAQ2B,OAAM,aAIpD,kBAACiC,EAAA,EAAS,CACRC,QAAM,EACN1D,QAAQ,SACR2D,MAAOjB,EACPkB,SApBV,SAA8BC,GAC5Bf,EAAsBe,EAAGC,OAAOH,QAoBxB7D,UAAU,aACViE,MAAM,YAELzC,IAAO0C,mBAAmBC,KAAI,SAACC,GAAQ,OACtC,kBAACC,EAAA,EAAQ,CAAC3D,IAAK0D,EAAS7D,GAAIsD,MAAOO,EAAS7D,IACzC6D,EAASE,UAIhB,kBAACC,EAAA,EAAM,CAAC1D,QAnChB,SAA2BkD,GACzBhB,EAA2B,UAAdJ,EAAwB,OAAS,SAC9CM,EAA6B,UAAdN,EAAwB,UAAY,WAkC3C,0BACE3C,UAAWK,IAAWN,EAAQkC,MAAM,eACjClC,EAAQuC,SAAyB,SAAdK,MAGxB,0BACE3C,UAAWK,IAAWN,EAAQkC,MAAM,eACjClC,EAAQuC,SAAyB,SAAdK,MAGxB,yBACE3C,UAAWK,IAAWN,EAAQ+B,cAAc,eACzC/B,EAAQ0C,OAAuB,SAAdE,IAEpBU,MAAM,KACNC,IAAK9B,IAAO+B,KAAKiB,cACjBf,IAAI,qBAGR,kBAACc,EAAA,EAAM,CAACP,OAAO,SAASS,IAAI,aAAaC,KAAMlD,IAAOmD,MAAMC,QAAO,SAEjE,yBAAKvB,MAAM,KAAKC,IAAK9B,IAAO+B,KAAKsB,YAAapB,IAAI,mBAIxD,kBAAC,EAAa","file":"static/js/6.674f7ac1.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\n\nconst useStyles = makeStyles(theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nimport useStyles from './useStyles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst SnackbarContentWrapper = props => {\n  const classes = useStyles();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      aria-describedby=\"notification-snackbar\"\n      message={\n        <span id=\"notification-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n};\n\nSnackbarContentWrapper.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default SnackbarContentWrapper;\n","import SnackbarContent from './SnackbarContent';\n\nexport default SnackbarContent;\n","import React from 'react';\n\nimport { useStore } from 'store';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from './SnackbarContent';\nimport config from 'config';\n\nconst Notifications = _ => {\n  const { state: { notifications }, actions: { hideNotification } } = useStore();\n\n  return <Snackbar\n    open={notifications.isActive}\n    onClose={hideNotification}\n    {...config.notifications.props}\n    {...notifications.opt}\n  >\n    <SnackbarContent\n      message={notifications.message}\n      onClose={hideNotification}\n      variant={notifications.variant}\n    />\n  </Snackbar>\n};\n\nexport default Notifications;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  logo: {\n    padding: 2,\n  },\n  themeSwitcher: {\n    transition: \"0.8s ease\",\n    transform: \"rotate(180deg)\",\n  },\n  stars: {\n    position: \"relative\",\n    \"&:after, &:before\": {\n      color: \"white\",\n      content: '\"*\"',\n      fontSize: 7,\n      fontWeight: 900,\n      position: \"absolute\",\n      zIndex: 1,\n      transition: \"0.8s ease\",\n      opacity: 0,\n    },\n  },\n  activate: {\n    \"&:nth-child(1):after\": {\n      left: 7,\n      top: -4,\n      opacity: 1,\n    },\n    \"&:nth-child(1):before\": {\n      left: 9,\n      top: -17,\n      fontSize: 10,\n      opacity: 1,\n    },\n    \"&:nth-child(2):after\": {\n      left: 21,\n      top: -17,\n      fontSize: 10,\n      opacity: 1,\n    },\n    \"&:nth-child(2):before\": {\n      display: \"none\",\n    },\n  },\n  rotate: {\n    transform: \"rotate(0)\",\n  },\n}));\n\nexport default useStyles;\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport classNames from \"classnames\";\n\nimport Notifications from \"notifications\";\n\nimport { useStore } from \"store\";\nimport { isMobile } from \"utils\";\n\nimport config from \"config\";\n\nimport useStyles from \"./useStyles\";\n\nconst Header = (_) => {\n  const classes = useStyles();\n  const {\n    state: {\n      themeMode,\n      monacoTheme,\n      editor: { selectedLanguageId },\n    },\n    actions: {\n      setThemeMode,\n      editor: { setSelectedLanguageId, setMonacoTheme },\n    },\n  } = useStore();\n\n  function handleThemeSwitch(ev) {\n    setThemeMode(themeMode === \"light\" ? \"dark\" : \"light\");\n    setMonacoTheme(themeMode === \"light\" ? \"vs-dark\" : \"light\");\n  }\n\n  function handleLanguageChange(ev) {\n    setSelectedLanguageId(ev.target.value);\n  }\n\n  return (\n    <>\n      <AppBar color=\"default\">\n        <Toolbar>\n          <Typography className={classes.logo}>\n            <img width=\"40\" src={config.urls.logoIcon} alt=\"logo\" />\n          </Typography>\n          {!isMobile && (\n            <Typography variant=\"h6\" className={classes.title}>\n              React IDE\n            </Typography>\n          )}\n          <TextField\n            select\n            variant=\"filled\"\n            value={selectedLanguageId}\n            onChange={handleLanguageChange}\n            className=\"text-width\"\n            label=\"Language\"\n          >\n            {config.supportedLanguages.map((language) => (\n              <MenuItem key={language.id} value={language.id}>\n                {language.name}\n              </MenuItem>\n            ))}\n          </TextField>\n          <Button onClick={handleThemeSwitch}>\n            <span\n              className={classNames(classes.stars, {\n                [classes.activate]: themeMode === \"dark\",\n              })}\n            />\n            <span\n              className={classNames(classes.stars, {\n                [classes.activate]: themeMode === \"dark\",\n              })}\n            />\n            <img\n              className={classNames(classes.themeSwitcher, {\n                [classes.rotate]: themeMode === \"dark\",\n              })}\n              width=\"40\"\n              src={config.urls.themeModeIcon}\n              alt=\"theme mode icon\"\n            />\n          </Button>\n          <Button target=\"_blank\" rel=\"noreferrer\" href={config.links.github}>\n            GitHub\n            <img width=\"40\" src={config.urls.octocatIcon} alt=\"github icon\" />\n          </Button>\n        </Toolbar>\n      </AppBar>\n      <Notifications />\n    </>\n  );\n};\n\nexport default Header;\n"],"sourceRoot":""}